{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_Demo = _resolveComponent(\"Demo\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.isShow && _ctx.isShow(...args))\n  }, \"显示/隐藏\"), _createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _ctx.isShow ? (_openBlock(), _createBlock(_component_Demo, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","onClick","_cache","args","_ctx","isShow","_createCommentVNode","_createBlock","_component_Demo","key"],"sources":["/Users/linuxyn/vue3_test/src/App.vue"],"sourcesContent":["  <template>\n    <button @click=\"isShow\">显示/隐藏</button>\n    <!-- Vue3组件中的模板结构中可以没有根标签 -->\n    <Demo v-if=\"isShow\"/>\n  </template>\n  <script>\n  import {ref} from 'vue'\n  import Demo from './components/Demo';\n  export default {\n    name:'App',\n    components:{Demo},\n    setup() {\n      let isShow = ref(true)\n      return()\n    }\n  };\n  </script>\n\n  <style>\n  </style>\n"],"mappings":";;;6DACIA,mBAAA,CAAsC;IAA7BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,OAAK,GAC7BG,mBAAA,0BAA6B,EACjBF,IAAA,CAAAC,MAAM,I,cAAlBE,YAAA,CAAqBC,eAAA;IAAAC,GAAA;EAAA,M"},"metadata":{},"sourceType":"module","externalDependencies":[]}