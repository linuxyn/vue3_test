{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Suspense as _Suspense, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"我是App组件(祖)\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Child = _resolveComponent(\"Child\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(), _createBlock(_Suspense, null, {\n    default: _withCtx(() => [_createVNode(_component_Child)]),\n    fail: _withCtx(() => []),\n    _: 1 /* STABLE */\n  }))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createBlock","_Suspense","default","_withCtx","_createVNode","_component_Child","fail"],"sources":["/Users/linuxyn/vue3_test/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h2>我是App组件(祖)</h2>\n    <Suspense>\n      <template v-slot:default>\n        <Child/>\n      </template>\n      <template v-slot:fail>\n\n      </template>\n      \n    </Suspense> \n  </div>\n</template>\n<script>\n  // import Child from './components/Child'  // 静态引入，等待组件引入成功后才集中一起渲染\n\n  import {defineAsyncComponent} from 'vue'\n  // const Child = defineAsyncComponent(()=>{\n  //   return import('./components/Child')}\n  //   )\n  // 简写\n  const Child = defineAsyncComponent(()=>import('./components/Child')) // 异步引入，浏览器调成3G网路，首先App会先加载出来，Child后面才会出来\n  export default {\n    name:'App',\n    components: { Child },\n  }\n</script>\n<style>\n.app{\n  background-color: gray;\n  padding: 10px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAAmB,YAAf,YAAU;;;;uBADhBC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAmB,G,cACnBC,YAAA,CAQWC,SAAA;IAPQC,OAAO,EAAAC,QAAA,CACtB,MAAQ,CAARC,YAAA,CAAQC,gBAAA,E;IAEOC,IAAI,EAAAH,QAAA,CAArB,MAEW"},"metadata":{},"sourceType":"module","externalDependencies":[]}