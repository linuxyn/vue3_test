{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _createElementVNode(\"h2\", null, _toDisplayString(_ctx.person), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString($setup.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString($setup.age), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"薪资:\" + _toDisplayString($setup.salary) + \"k\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.name += '~')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.age++)\n  }, \"年龄增长\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.salary++)\n  }, \"涨薪\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createElementVNode","_toDisplayString","_ctx","person","$setup","name","age","salary","onClick","_cache","$event"],"sources":["/Users/linuxyn/vue3_test/src/components/Demo.vue"],"sourcesContent":["<template>\n  <!-- Vue3组件中的模板结构中可以没有根标签 -->\n  <h2>{{ person }}</h2>\n  <h2>姓名:{{ name }}</h2>\n  <h2>年龄:{{ age }}</h2>\n  <h2>薪资:{{ salary }}k</h2>\n  <button @click=\"name+='~'\">修改姓名</button>\n  <button @click=\"age++\">年龄增长</button>\n  <button @click=\"salary++\">涨薪</button>\n</template>\n<script>\n// 组合式api，本质上都是函数\nimport { ref,reactive,toRef} from \"vue\";\nexport default {\n  name: \"Demo\",\n  setup() {\n  // 数据\n  let person = reactive({\n    name:'张三',\n    age:33,\n    job:{\n      j1:{\n        salary:20\n      }\n    }\n  })\n  // const name = person.name\n  // const name2 = toRef(person,'name')\n  // console.log(name) // 张三\n  // console.log(name2) // ObjectRefImpl, name获取的就是person中的name\n\n  // 返回一个对象(常用)\n  return {\n    name: toRef(person,'name'),\n    age:toRef(person,'age'),\n    salary:toRef(person.job.j1,'salary')\n  };\n  },\n}\n</script>\n<style scoped>\n\n</style>"],"mappings":";;6DACEA,mBAAA,0BAA6B,EAC7BC,mBAAA,CAAqB,YAAAC,gBAAA,CAAdC,IAAA,CAAAC,MAAM,kBACbH,mBAAA,CAAsB,YAAlB,KAAG,GAAAC,gBAAA,CAAGG,MAAA,CAAAC,IAAI,kBACdL,mBAAA,CAAqB,YAAjB,KAAG,GAAAC,gBAAA,CAAGG,MAAA,CAAAE,GAAG,kBACbN,mBAAA,CAAyB,YAArB,KAAG,GAAAC,gBAAA,CAAGG,MAAA,CAAAG,MAAM,IAAG,GAAC,iBACpBP,mBAAA,CAAwC;IAA/BQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,MAAA,CAAAC,IAAI;KAAO,MAAI,GAC/BL,mBAAA,CAAoC;IAA3BQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,MAAA,CAAAE,GAAG;KAAI,MAAI,GAC3BN,mBAAA,CAAqC;IAA5BQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,MAAA,CAAAG,MAAM;KAAI,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}