{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _createElementVNode(\"h2\", null, \"x.y的值:\" + _toDisplayString($setup.x.y), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.x.y++)\n  }, \"点我x++\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.x = {\n      y: 888\n    })\n  }, \"点我替换x\"), _createElementVNode(\"h2\", null, _toDisplayString($setup.person), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString(_ctx.age), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"薪资:\" + _toDisplayString(_ctx.job.j1.salary) + \"k\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.name += '~')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.age++)\n  }, \"年龄增长\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.job.j1.salary++)\n  }, \"涨薪\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createElementVNode","_toDisplayString","$setup","x","y","onClick","_cache","$event","person","_ctx","name","age","job","j1","salary"],"sources":["/Users/linuxyn/vue3_test/src/components/Demo.vue"],"sourcesContent":["<template>\n  <!-- Vue3组件中的模板结构中可以没有根标签 -->\n  <h2>x.y的值:{{ x.y }}</h2>\n  <button @click=\"x.y++\">点我x++</button>\n  \n  <button @click=\"x={y:888}\">点我替换x</button>\n  <h2>{{ person }}</h2>\n  <h2>姓名:{{ name }}</h2>\n  <h2>年龄:{{ age }}</h2>\n  <h2>薪资:{{ job.j1.salary }}k</h2>\n  <button @click=\"name+='~'\">修改姓名</button>\n  <button @click=\"age++\">年龄增长</button>\n  <button @click=\"job.j1.salary++\">涨薪</button>\n</template>\n<script>\n// 组合式api，本质上都是函数\n  import { ref,reactive,toRef,toRefs,shallowReactive,shallowRef} from \"vue\";\n  export default {\n    name: \"Demo\",\n    setup() {\n      // shallowReactive只考虑第一层的响应式数据，里面的不再考虑，所有这次无法修改salary的值\n      // let person = shallowReactive({\n      let person = reactive({\n        name:'张三',\n        age:33,\n        job:{\n          j1:{\n            salary:20\n          }\n        }\n      })\n      // 由于处理于基本数据类型的响应式，而这里为对象类型，所以监测不到y值的变化\n      let x = shallowRef({\n        y:1\n      })\n      console.log(x)\n      return {\n        x,\n        person,\n        ...toRefs(person)\n      }\n    },\n  }\n</script>\n<style scoped>\n\n</style>"],"mappings":";;6DACEA,mBAAA,0BAA6B,EAC7BC,mBAAA,CAAwB,YAApB,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,CAAC,CAACC,CAAC,kBAChBJ,mBAAA,CAAqC;IAA5BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,MAAA,CAAAC,CAAC,CAACC,CAAC;KAAI,OAAK,GAE5BJ,mBAAA,CAAyC;IAAhCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,MAAA,CAAAC,CAAC;MAAAC,CAAA;IAAA;KAAU,OAAK,GAChCJ,mBAAA,CAAqB,YAAAC,gBAAA,CAAdC,MAAA,CAAAM,MAAM,kBACbR,mBAAA,CAAsB,YAAlB,KAAG,GAAAC,gBAAA,CAAGQ,IAAA,CAAAC,IAAI,kBACdV,mBAAA,CAAqB,YAAjB,KAAG,GAAAC,gBAAA,CAAGQ,IAAA,CAAAE,GAAG,kBACbX,mBAAA,CAAgC,YAA5B,KAAG,GAAAC,gBAAA,CAAGQ,IAAA,CAAAG,GAAG,CAACC,EAAE,CAACC,MAAM,IAAG,GAAC,iBAC3Bd,mBAAA,CAAwC;IAA/BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEE,IAAA,CAAAC,IAAI;KAAO,MAAI,GAC/BV,mBAAA,CAAoC;IAA3BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEE,IAAA,CAAAE,GAAG;KAAI,MAAI,GAC3BX,mBAAA,CAA4C;IAAnCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEE,IAAA,CAAAG,GAAG,CAACC,EAAE,CAACC,MAAM;KAAI,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}