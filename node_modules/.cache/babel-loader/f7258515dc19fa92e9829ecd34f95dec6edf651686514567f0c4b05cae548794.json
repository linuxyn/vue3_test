{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Child = _resolveComponent(\"Child\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"我是App组件(祖) \" + _toDisplayString(_ctx.name) + \"--\" + _toDisplayString(_ctx.price), 1 /* TEXT */), _createVNode(_component_Child)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","name","price","_createVNode","_component_Child"],"sources":["/Users/linuxyn/vue3_test/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <h2>我是App组件(祖) {{ name }}--{{ price }}</h2>\n    <Child/>\n  </div>\n</template>\n<script>\n  import {provide, reactive,toRefs, isReactive,isRef,isReadonly,isProxy} from 'vue'\n  import Child from './components/Child'\n  export default {\n    name:'App',\n    components: { Child },\n    setup() {\n      let car = reactive({name:'奔驰',price:'40万'})\n      provide('qiche',car)\n\n      console.log(isReactive(car));\n      console.log(isRef(car));\n      console.log(isProxy(car));\n      console.log(isReadonly(car));\n      return {\n        ...toRefs(car)\n      }\n    }\n  }\n</script>\n<style>\n.app{\n  background-color: gray;\n  padding: 10px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;uBAAhBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,CAA2C,YAAvC,aAAW,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,IAAI,IAAG,IAAE,GAAAF,gBAAA,CAAGC,IAAA,CAAAE,KAAK,kBACnCC,YAAA,CAAQC,gBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}