{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _createTextVNode(\" h2 \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["/Users/linuxyn/vue3_test/src/components/Demo.vue"],"sourcesContent":["<template>\n    <!-- Vue3组件中的模板结构中可以没有根标签 -->\n    h2\n</template>\n<script>\n  import { reactive,computed } from \"vue\";\n  export default {\n    name: \"Demo\",\n    // Vue2中的写法 不推荐\n    /* computed: {\n          fullName(){\n        return this.person.firstName + '-' + this.person.lastName\n      }\n    },*/\n    setup() {\n      // 数据\n      let person = reactive({\n        firstName:\"张\",\n        lastName:'三',\n      })\n      // Vue3中计算属性的值不再是一个对象了，而是一个函数\n      // 这里直接给person增加一个属性fullName，在vue3中直接可以进行响应式渲染\n      // 计算属性-简写\n      person.fullName = computed(()=>{\n        return person.firstName + '-' + person.lastName\n      })\n      // 计算属性-完整写法(考虑读和写)\n      person.fullName = computed({\n        get(){\n          return person.firstName + '-' + person.lastName\n        },\n        set(value){\n          const nameArr = value.split('-')\n          person.firstName = nameArr[0]\n          person.lastName = nameArr[1]\n        }\n        \n      })\n      return {\n        person,\n      };\n    },\n  }\n</script>\n<style scoped>\n\n</style>"],"mappings":";;6DACIA,mBAAA,0BAA6B,E,iBAAA,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}