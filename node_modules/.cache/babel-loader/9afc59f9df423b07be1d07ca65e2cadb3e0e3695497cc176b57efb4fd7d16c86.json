{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.keyWord = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.keyWord]]), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","type","_ctx","keyWord","$event","_hoisted_1"],"sources":["/Users/linuxyn/vue3_test/src/App.vue"],"sourcesContent":["  <template>\n    <!-- Vue3组件中的模板结构中可以没有根标签 -->\n    <input type=\"text\" v-model=\"keyWord\">\n    <h3></h3>\n  </template>\n  <script>\n  import {ref} from 'vue'\n  export default {\n    name:'App',\n    setup() {\n      let isShowDemo = ref(true)\n      return {isShowDemo}\n    }\n  };\n  </script>\n\n  <style>\n  </style>\n"],"mappings":";gCAGIA,mBAAA,CAAS;;;6DAFTC,mBAAA,0BAA6B,E,gBAC7BD,mBAAA,CAAqC;IAA9BE,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,OAAO,GAAAC,MAAA;iDAAPF,IAAA,CAAAC,OAAO,E,GACnCE,UAAS,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}