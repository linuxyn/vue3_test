{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString($setup.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString($setup.age), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.sayHello && $setup.sayHello(...args))\n  }, \"点我\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.test1 && $options.test1(...args))\n  }, \"测试vue2去获取vue3中的值\"), _hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.test2 && _ctx.test2(...args))\n  }, \"测试vue3去获取vue2中的值\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_toDisplayString","$setup","name","age","onClick","_cache","args","sayHello","$options","test1","_hoisted_1","_ctx","test2"],"sources":["/Users/linuxyn/vue3_test/src/App.vue"],"sourcesContent":["<template>\n  <!-- Vue3组件中的模板结构中可以没有根标签 -->\n  <h2>姓名:{{ name }}</h2>\n  <h2>年龄:{{ age }}</h2>\n  <button @click=\"sayHello\">点我</button>\n  <button @click=\"test1\">测试vue2去获取vue3中的值</button>\n  <br>\n  <button @click=\"test2\">测试vue3去获取vue2中的值</button>\n</template>\n\n<script>\n\n\n// import { h } from 'vue'\nexport default {\n  name: 'App',\n  data() {\n    return {\n      gender: '男'\n    }\n  },\n  methods: {\n    sayWelcome(){\n      alert('欢迎来到尚硅谷学习')\n    },\n    test1(){\n      console.log(this.gender)\n      console.log(this.name)\n      console.log(this.age)\n    }\n  },\n\n\n\n  // 此处只是测试一下setup，暂时不考虑响应式的问题\n  setup() {\n    // 数据\n    let name = '张三'\n    let age = 18\n\n    // 方法\n    function sayHello() {\n      alert(`我叫${name},我今年${age},你好啊`)\n    }\n    function test2() { \n      console.log(name)\n      console.log(age)\n      console.log(sayHello)\n      console.log(this.sex)\n      console.log(this.sayWelcome)\n     }\n    return {\n      name,\n      age,\n      gender,\n      sayHello\n    }\n    // 返回一个函数（渲染函数，和Vue2中的render类似）\n    // return ()=> h('h1', '尚硅谷')\n  }\n}\n</script>\n\n<style>\n/* #app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n} */\n</style>\n"],"mappings":";gCAMEA,mBAAA,CAAI;;;6DALJC,mBAAA,0BAA6B,EAC7BD,mBAAA,CAAsB,YAAlB,KAAG,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,IAAI,kBACdJ,mBAAA,CAAqB,YAAjB,KAAG,GAAAE,gBAAA,CAAGC,MAAA,CAAAE,GAAG,kBACbL,mBAAA,CAAqC;IAA5BM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,MAAA,CAAAM,QAAA,IAAAN,MAAA,CAAAM,QAAA,IAAAD,IAAA,CAAQ;KAAE,IAAE,GAC5BR,mBAAA,CAAgD;IAAvCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEE,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAH,IAAA,CAAK;KAAE,kBAAgB,GACvCI,UAAI,EACJZ,mBAAA,CAAgD;IAAvCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEK,IAAA,CAAAC,KAAA,IAAAD,IAAA,CAAAC,KAAA,IAAAN,IAAA,CAAK;KAAE,kBAAgB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}