{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"一个人的信息\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _hoisted_1, _createTextVNode(\" 姓: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.person.firstName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.person.firstName]]), _hoisted_2, _createTextVNode(\" 名: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.person.lastName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.person.lastName]]), _hoisted_3, _createTextVNode(\" 全名:\" + _toDisplayString(_ctx.person.fullName) + \" \", 1 /* TEXT */), _hoisted_4, _createTextVNode(\" 全名:\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.person.fullName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.person.fullName]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_hoisted_1","type","_ctx","person","firstName","$event","_hoisted_2","lastName","_hoisted_3","_toDisplayString","fullName","_hoisted_4"],"sources":["/Users/linuxyn/vue3_test/src/components/Demo.vue"],"sourcesContent":["<template>\n    <!-- Vue3组件中的模板结构中可以没有根标签 -->\n    <h1>一个人的信息</h1>\n    姓: <input type=\"text\" v-model=\"person.firstName\">\n    <br>\n    名: <input type=\"text\" v-model=\"person.lastName\">\n    <br>\n    全名:{{ person.fullName }}\n    <br>\n    全名:<input type=\"text\" v-model=\"person.fullName\">\n    \n</template>\n<script>\n  import { get } from \"http\";\nimport { reactive,computed } from \"vue\";\n  export default {\n    name: \"Demo\",\n    // Vue2中的写法 不推荐\n    /* computed: {\n          fullName(){\n        return this.person.firstName + '-' + this.person.lastName\n      }\n    },*/\n    setup() {\n      // 数据\n      let person = reactive({\n        firstName:\"张\",\n        lastName:'三',\n      })\n      // Vue3中计算属性的值不再是一个对象了，而是一个函数\n      // 这里直接给person增加一个属性fullName，在vue3中直接可以进行响应式渲染\n      // 计算属性-简写\n      person.fullName = computed(()=>{\n        return person.firstName + '-' + person.lastName\n      })\n      // 计算属性-完整写法(考虑读和写)\n      person.fullName = computed({\n        get(){\n          return person.firstName + '-' + person.lastName\n        },\n        set(value){\n          nameArr = value.split('-')\n          person.firstName = nameArr[]\n        }\n        \n      })\n\n\n\n      return {\n        person,\n      };\n    },\n  }\n</script>\n<style scoped>\n\n</style>"],"mappings":";gCAEIA,mBAAA,CAAe,YAAX,QAAM;gCAEVA,mBAAA,CAAI;gCAEJA,mBAAA,CAAI;gCAEJA,mBAAA,CAAI;;;6DAPJC,mBAAA,0BAA6B,EAC7BC,UAAe,E,iBAAA,MACZ,G,gBAAAF,mBAAA,CAA8C;IAAvCG,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,MAAM,CAACC,SAAS,GAAAC,MAAA;iDAAhBH,IAAA,CAAAC,MAAM,CAACC,SAAS,E,GAC/CE,UAAI,E,iBAAA,MACD,G,gBAAAR,mBAAA,CAA6C;IAAtCG,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,MAAM,CAACI,QAAQ,GAAAF,MAAA;iDAAfH,IAAA,CAAAC,MAAM,CAACI,QAAQ,E,GAC9CC,UAAI,E,iBAAA,MACD,GAAAC,gBAAA,CAAGP,IAAA,CAAAC,MAAM,CAACO,QAAQ,IAAG,GACxB,iBAAAC,UAAI,E,iBAAA,MACD,G,gBAAAb,mBAAA,CAA6C;IAAtCG,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,MAAM,CAACO,QAAQ,GAAAL,MAAA;iDAAfH,IAAA,CAAAC,MAAM,CAACO,QAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}