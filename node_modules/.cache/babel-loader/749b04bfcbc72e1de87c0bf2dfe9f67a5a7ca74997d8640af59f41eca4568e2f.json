{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"huan'che'ming'g\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模板结构中可以没有根标签 \"), _createElementVNode(\"h2\", null, \"当前求和:\" + _toDisplayString($setup.sum), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.sum++)\n  }, \"点我x++\"), _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString(_ctx.age), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"薪资:\" + _toDisplayString(_ctx.job.j1.salary) + \"k\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"h2\", null, \"座驾信息:\" + _toDisplayString($setup.person.car), 513 /* TEXT, NEED_PATCH */), [[_vShow, $setup.person.car]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.name += '~')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.age++)\n  }, \"年龄增长\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.job.j1.salary++)\n  }, \"涨薪\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.showRawPerson && $setup.showRawPerson(...args))\n  }, \"输出最原始的person\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.addCar && $setup.addCar(...args))\n  }, \"给人添加一台车\"), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_toDisplayString","$setup","sum","onClick","_cache","$event","_ctx","name","age","job","j1","salary","person","car","args","showRawPerson","addCar","_hoisted_1"],"sources":["/Users/linuxyn/vue3_test/src/components/Demo.vue"],"sourcesContent":["<template>\n  <!-- Vue3组件中的模板结构中可以没有根标签 -->\n  <h2>当前求和:{{ sum }}</h2>\n  <button @click=\"sum++\">点我x++</button>\n  <h2>姓名:{{ name }}</h2>\n  <h2>年龄:{{ age }}</h2>\n  <h2>薪资:{{ job.j1.salary }}k</h2>\n  <h2 v-show=\"person.car\">座驾信息:{{ person.car }}</h2>\n  <button @click=\"name+='~'\">修改姓名</button>\n  <button @click=\"age++\">年龄增长</button>\n  <button @click=\"job.j1.salary++\">涨薪</button>\n  <button @click=\"showRawPerson\">输出最原始的person</button>\n  <button @click=\"addCar\">给人添加一台车</button>\n  <button>huan'che'ming'g</button>\n</template>\n<script>\n// 组合式api，本质上都是函数\n  import { ref,reactive,toRefs,toRaw} from \"vue\";\n  export default {\n    name: \"Demo\",\n    setup() {\n      let sum = ref(0)\n      let person = reactive({\n        name:'张三',\n        age:33,\n        job:{\n          j1:{\n            salary:20\n          }\n        }\n      })\n\n      function showRawPerson(){\n        // console.log('person;',person)  // person的响应式对象Prxoy\n        const p = toRaw(person)\n        // console.log('rawPerson:',p) // 原始的raw对象 {name: '张三', age: 33, job: {…}}\n        \n        // 对基础类型不生效, toRaw只能处理reactive对象\n        // console.log(sum)\n        // const sum1 = toRaw(sum)\n        // console.log(sum1==sum) // 结果为true\n      }\n\n      function addCar(){\n        // 注意这里直接这样写是不会生效的，因为return '...toRefs(person)'代表是会把person中每个属性拆分添加return的对象里面，此时返回值里面已经不存在person，想要页面响应式的变化可以直接在return中添加返回值person即可\n        let car = {name:'奔驰',price:30}\n        person.car = car\n        console.log(person)\n      }\n\n      return {\n        person,\n        sum,\n        showRawPerson,\n        ...toRefs(person),\n        addCar\n      }\n    },\n  }\n</script>\n<style scoped>\n\n</style>"],"mappings":";gCAaEA,mBAAA,CAAgC,gBAAxB,iBAAe;;;6DAZvBC,mBAAA,0BAA6B,EAC7BD,mBAAA,CAAuB,YAAnB,OAAK,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,GAAG,kBACfJ,mBAAA,CAAqC;IAA5BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAC,GAAG;KAAI,OAAK,GAC5BJ,mBAAA,CAAsB,YAAlB,KAAG,GAAAE,gBAAA,CAAGM,IAAA,CAAAC,IAAI,kBACdT,mBAAA,CAAqB,YAAjB,KAAG,GAAAE,gBAAA,CAAGM,IAAA,CAAAE,GAAG,kBACbV,mBAAA,CAAgC,YAA5B,KAAG,GAAAE,gBAAA,CAAGM,IAAA,CAAAG,GAAG,CAACC,EAAE,CAACC,MAAM,IAAG,GAAC,iB,gBAC3Bb,mBAAA,CAAkD,YAA1B,OAAK,GAAAE,gBAAA,CAAGC,MAAA,CAAAW,MAAM,CAACC,GAAG,iC,SAA9BZ,MAAA,CAAAW,MAAM,CAACC,GAAG,E,GACtBf,mBAAA,CAAwC;IAA/BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,IAAI;KAAO,MAAI,GAC/BT,mBAAA,CAAoC;IAA3BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAE,GAAG;KAAI,MAAI,GAC3BV,mBAAA,CAA4C;IAAnCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAG,GAAG,CAACC,EAAE,CAACC,MAAM;KAAI,IAAE,GACnCb,mBAAA,CAAoD;IAA3CK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEb,MAAA,CAAAc,aAAA,IAAAd,MAAA,CAAAc,aAAA,IAAAD,IAAA,CAAa;KAAE,cAAY,GAC3ChB,mBAAA,CAAwC;IAA/BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEb,MAAA,CAAAe,MAAA,IAAAf,MAAA,CAAAe,MAAA,IAAAF,IAAA,CAAM;KAAE,SAAO,GAC/BG,UAAgC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}