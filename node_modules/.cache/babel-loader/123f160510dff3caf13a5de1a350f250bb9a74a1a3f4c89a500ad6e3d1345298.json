{"ast":null,"code":"// 组合式api，本质上都是函数\nimport { ref, watch } from \"vue\";\nexport default {\n  name: \"Demo\",\n  /*\n  watch:{\n    sum(newValue, oldValue){\n      console.log(newValue, oldValue)\n    },\n    sum:{\n      immediate:true,\n      deep:true,\n      handler(newValue, oldValue){\n        console.log(newValue, oldValue)\n      }\n    }\n  },*/\n  setup() {\n    // 数据\n    let sum = ref(0);\n    let msg = ref('你好啊');\n    let person =\n    // 情况一: 监视一个值\n    watch(sum, (newValue, oldValue) => {\n      console.log('sum的值变了', newValue, oldValue);\n    }, {\n      immediate: true\n    });\n\n    // 情况二: 监视ref所定义的多个响应式数据\n    // 1. 直接写多个watch在Vue中是支持的\n    // 2. vue3中还支持一个比较好的写法\n    watch([sum, msg], (newValue, oldValue) => {\n      console.log('sum或者msg的值变了', newValue, oldValue);\n    }, {\n      immediate: true\n    });\n\n    // 返回一个对象(常用)\n    return {\n      sum,\n      msg\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","name","setup","sum","msg","person","newValue","oldValue","console","log","immediate"],"sources":["/Users/linuxyn/vue3_test/src/components/Demo.vue"],"sourcesContent":["<template>\n    <!-- Vue3组件中的模板结构中可以没有根标签 -->\n    <h2>当前请求:{{ sum }}</h2>\n    <button @click=\"sum++\">点我+1</button>\n    <h2>当前信息为:{{ msg }}</h2>\n    <button @click=\"msg+='!'\">修改信息</button>\n</template>\n<script>\n  // 组合式api，本质上都是函数\n  import { ref,watch } from \"vue\";\n  export default {\n    name: \"Demo\",\n    /*\n    watch:{\n      sum(newValue, oldValue){\n        console.log(newValue, oldValue)\n      },\n      sum:{\n        immediate:true,\n        deep:true,\n        handler(newValue, oldValue){\n          console.log(newValue, oldValue)\n        }\n      }\n    },*/\n    setup() {\n    // 数据\n    let sum = ref(0)\n    let msg = ref('你好啊')\n    let person = \n\n    // 情况一: 监视一个值\n    watch(sum,(newValue, oldValue)=>{\n      console.log('sum的值变了',newValue, oldValue)\n    },{immediate:true})\n\n    // 情况二: 监视ref所定义的多个响应式数据\n      // 1. 直接写多个watch在Vue中是支持的\n      // 2. vue3中还支持一个比较好的写法\n    watch([sum,msg],(newValue, oldValue)=>{\n      console.log('sum或者msg的值变了',newValue, oldValue)\n    },{immediate:true})\n\n\n    // 返回一个对象(常用)\n    return {\n      sum,\n      msg\n    };\n    },\n  }\n</script>\n<style scoped>\n\n</style>"],"mappings":"AAQE;AACA,SAASA,GAAG,EAACC,KAAI,QAAS,KAAK;AAC/B,eAAe;EACbC,IAAI,EAAE,MAAM;EACZ;;;;;;;;;;;;;EAaAC,KAAKA,CAAA,EAAG;IACR;IACA,IAAIC,GAAE,GAAIJ,GAAG,CAAC,CAAC;IACf,IAAIK,GAAE,GAAIL,GAAG,CAAC,KAAK;IACnB,IAAIM,MAAK;IAET;IACAL,KAAK,CAACG,GAAG,EAAC,CAACG,QAAQ,EAAEC,QAAQ,KAAG;MAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACH,QAAQ,EAAEC,QAAQ;IAC1C,CAAC,EAAC;MAACG,SAAS,EAAC;IAAI,CAAC;;IAElB;IACE;IACA;IACFV,KAAK,CAAC,CAACG,GAAG,EAACC,GAAG,CAAC,EAAC,CAACE,QAAQ,EAAEC,QAAQ,KAAG;MACpCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACH,QAAQ,EAAEC,QAAQ;IAC/C,CAAC,EAAC;MAACG,SAAS,EAAC;IAAI,CAAC;;IAGlB;IACA,OAAO;MACLP,GAAG;MACHC;IACF,CAAC;EACD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}